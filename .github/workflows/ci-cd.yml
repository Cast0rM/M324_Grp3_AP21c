name: CI Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13.0

      # 3. Install Python dependencies
      - name: Install Dependencies
        working-directory: Code/backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Run Tests
      - name: Run Tests
        working-directory: Code/backend
        run: |
          pytest test_pytestFastapi.py --maxfail=5 --disable-warnings

      # 5. Build Docker Image
      - name: Build Docker Image
        working-directory: Code/backend
        run: |
          # Build the Docker image (you can specify your port here if needed)
          docker build -t fastapi-application:latest .

      # 6. Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7. Build and Push Docker Images with Dynamic Tagging
      - name: Build and Push Docker Images
        run: |
          # Get the current commit hash for versioning
          COMMIT_HASH=$(git rev-parse --short HEAD)
          VERSION="latest"

          # Tag the image with the commit hash and 'latest' version
          docker tag fastapi-application:latest ${{ secrets.DOCKER_USERNAME }}/fastapi-application:$COMMIT_HASH
          docker tag fastapi-application:latest ${{ secrets.DOCKER_USERNAME }}/fastapi-application:$VERSION

          # Push the image to DockerHub
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-application:$COMMIT_HASH
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-application:$VERSION
