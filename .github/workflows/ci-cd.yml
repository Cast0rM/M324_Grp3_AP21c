name: CI Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13.0

      # 3. Install Python dependencies
      - name: Install Dependencies
        working-directory: Code/backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Run Tests
      - name: Run Tests
        working-directory: Code/backend
        run: |
          pytest test_pytestFastapi.py --maxfail=5 --disable-warnings

      # 5. Build Docker Image
      - name: Build Docker Image
        working-directory: Code/backend
        env:
          ALBUM_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          ALBUM_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          ALBUM_HOST: ${{ secrets.ALBUM_DATABASE_URL }}
          ALBUM_PORT: 3306
          ALBUM_DATABASE: ${{ secrets.ALBUM_DATABASE_NAME }}
          BANDS_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          BANDS_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          BANDS_HOST: ${{ secrets.BANDS_DATABASE_URL }}
          BANDS_PORT: 3306
          BANDS_DATABASE: ${{ secrets.BANDS_DATABASE_NAME }}
        run: |
          docker build \
            --build-arg ALBUM_USERNAME=$ALBUM_USERNAME \
            --build-arg ALBUM_PASSWORD=$ALBUM_PASSWORD \
            --build-arg ALBUM_HOST=$ALBUM_HOST \
            --build-arg ALBUM_PORT=$ALBUM_PORT \
            --build-arg ALBUM_DATABASE=$ALBUM_DATABASE \
            --build-arg BANDS_USERNAME=$BANDS_USERNAME \
            --build-arg BANDS_PASSWORD=$BANDS_PASSWORD \
            --build-arg BANDS_HOST=$BANDS_HOST \
            --build-arg BANDS_PORT=$BANDS_PORT \
            --build-arg BANDS_DATABASE=$BANDS_DATABASE \
            -t fastapi-application .

      # 6. Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7. Build and Push Docker Images with Dynamic Tagging
      - name: Build and Push Docker Images
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          VERSION="latest"

          docker tag fastapi-application:latest ${{ secrets.DOCKER_USERNAME }}/fastapi-application:$COMMIT_HASH
          docker tag fastapi-application:latest ${{ secrets.DOCKER_USERNAME }}/fastapi-application:$VERSION

          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-application:$COMMIT_HASH
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-application:$VERSION
