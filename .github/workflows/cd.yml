name: CD Pipeline
on:
  workflow_run:
    workflows: ["CI Build"]
    types:
      - completed
jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Pull Latest Docker Image
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-application:latest

      - name: Stop and Remove Existing Container
        run: sudo docker rm -f fastapi-application || true

      - name: Run New Docker Container
        env:
          ALBUM_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          ALBUM_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          ALBUM_HOST: ${{ secrets.ALBUM_DATABASE_URL }}
          ALBUM_PORT: 3306
          ALBUM_DATABASE: ${{ secrets.ALBUM_DATABASE_NAME }}
          BANDS_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          BANDS_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          BANDS_HOST: ${{ secrets.BANDS_DATABASE_URL }}
          BANDS_PORT: 3306
          BANDS_DATABASE: ${{ secrets.BANDS_DATABASE_NAME }}
        run: >
          sudo docker run -d 
          -p 8000:8000 
          --name fastapi-application 
          -e ALBUM_USERNAME 
          -e ALBUM_PASSWORD 
          -e ALBUM_HOST 
          -e ALBUM_PORT 
          -e ALBUM_DATABASE 
          -e BANDS_USERNAME 
          -e BANDS_PASSWORD 
          -e BANDS_HOST 
          -e BANDS_PORT 
          -e BANDS_DATABASE 
          ${{ secrets.DOCKER_USERNAME }}/fastapi-application:latest
