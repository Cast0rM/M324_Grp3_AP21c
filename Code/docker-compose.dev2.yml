version: "3.9"

services:
  bands:
    build:
      context: ./db/bands # Path to the Microservice 1 directory
    container_name: bands-db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 3s
      retries: 5
      start_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: bands_db
    ports:
      - "3307:3306" # Exposing on a different port to avoid conflict
    volumes:
      - bands_data:/var/lib/mysql # Persist data
    networks:
      - backnet

  albums:
    build:
      context: ./db/albums
    container_name: albums-db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 3s
      retries: 5
      start_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: albums_db
    ports:
      - "3306:3306"
    volumes:
      - albums_data:/var/lib/mysql # Persist data
    networks:
      - backnet

  api:
    build:
      context: ./backend
    container_name: fastapi-application
    image: fastapi-application
    environment:
      PORT: 8000
      ALBUM_USERNAME: asdf
      ALBUM_PASSWORD: asdf
      ALBUM_HOST: localhost
      ALBUM_PORT: 3306
      ALBUM_DATABASE: album
      BANDS_USERNAME: fdsa
      BANDS_PASSWORD: fdsa
      BANDS_HOST: localhost
      BANDS_PORT: 3306
      BANDS_DATABASE: bands
    ports:
      - "8000:8000"
    networks:
      - backnet
    depends_on:
      albums:
        condition: service_healthy
      bands:
        condition: service_healthy
    restart: "no"

volumes:
  bands_data:
  albums_data:

networks:
  backnet:
  frontnet:
#docker-compose down
# docker-compose build --no-cache
# docker-compose up
